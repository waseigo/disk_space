---
name: Build and Test DiskSpace NIF

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build and Test on ${{ matrix.os }} with Elixir ${{ matrix.elixir_otp.elixir }}/OTP ${{ matrix.elixir_otp.otp }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
          - macos-14
          - ubuntu-latest
        elixir_otp:
          - { elixir: "1.18", otp: "27" }
          - { elixir: "1.17", otp: "27" }
          - { elixir: "1.16", otp: "26" }
          - { elixir: "1.15", otp: "26" }
          - { elixir: "1.14", otp: "25" }
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Elixir dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            native/disk_space/target
          key: ${{ runner.os }}-rustler-cargo-${{ hashFiles('native/disk_space/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rustler-cargo-

      - name: Set up Elixir and Erlang
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir_otp.elixir }}
          otp-version: ${{ matrix.elixir_otp.otp }}

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install dependencies and compile NIF
        run: |
          mix deps.get
          mix compile
        shell: bash

      - name: Verify NIF file exists (Linux)
        run: |
          FILE=priv/native/libdiskspace.so
          if [ ! -f "$FILE" ]; then
            echo "ERROR: NIF not found at $FILE"
            exit 1
          fi
          FILE_TYPE=$(file -b "$FILE")
          echo "NIF exists at $FILE with type: $FILE_TYPE"
        shell: bash
        if: runner.os == 'ubuntu-latest'

      - name: Verify NIF file exists (macOS)
        run: |
          FILE=priv/native/libdiskspace.dylib
          if [ ! -f "$FILE" ]; then
            echo "ERROR: NIF not found at $FILE"
            exit 1
          fi
          FILE_TYPE=$(file -b "$FILE")
          echo "NIF exists at $FILE with type: $FILE_TYPE"
        shell: bash
        if: runner.os == 'macos-14'

      - name: Verify NIF file exists (Windows)
        run: |
          $file = "priv/native/libdiskspace.dll"
          if (-Not (Test-Path $file)) {
            Write-Host "ERROR: NIF not found at $file"
            exit 1
          }
        shell: pwsh
        if: runner.os == 'Windows'

      - name: Run tests
        run: mix test
        shell: bash
