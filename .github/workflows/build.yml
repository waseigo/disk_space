name: Build and Test DiskSpace NIF

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os:
          - windows-latest
          - macos-14
          - ubuntu-latest
        elixir: ["1.14", "1.18"]
        otp: ["26", "27"] # corresponding OTP versions
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Elixir dependencies
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Set up Elixir and Erlang
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Install dependencies (Unix-like)
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          mix deps.get
          mix deps.compile
        shell: bash

      - name: Install dependencies (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          mix deps.get
          mix deps.compile
        shell: pwsh

      - name: Compile NIF (Unix-like)
        if: ${{ matrix.os != 'windows-latest' }}
        run: mix compile
        shell: bash

      - name: Compile NIF (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          $env:Path += ";${{ env.ERL_HOME }}\bin"
          mix compile
        shell: pwsh

      - name: Run tests (Unix-like)
        if: ${{ matrix.os != 'windows-latest' }}
        run: mix test
        shell: bash

      - name: Run tests (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: mix test
        shell: pwsh
